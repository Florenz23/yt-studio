generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workflow_metrics {
  workflow_id            String    @id @db.Uuid
  start_time             DateTime  @default(now()) @db.Timestamptz(6)
  end_time               DateTime? @db.Timestamptz(6)
  execution_time_seconds Float?
  prompt_tokens          Int       @default(0)
  completion_tokens      Int       @default(0)
  workflows              workflows @relation(fields: [workflow_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workflow_status_updates {
  id          String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workflow_id String          @db.Uuid
  status      workflow_status
  message     String
  progress    Int?
  timestamp   DateTime        @default(now()) @db.Timestamptz(6)
  workflows   workflows       @relation(fields: [workflow_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([workflow_id], map: "idx_status_updates_workflow_id")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// result_data JSON structure for company workflows:
/// {
///   email: string;
///   contact_url: string | null;
///   phone_number: string;
///   impressum_url: string | null;
///   company_industry: string;
///   company_products: string[];
///   decision_maker_name: string | null;
///   content_summary_points: string[];
/// }
model workflows {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workflow_type           String
  framework               String
  model                   String
  status                  workflow_status           @default(PENDING)
  created_at              DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at              DateTime                  @default(now()) @db.Timestamptz(6)
  input_data              Json
  result_data             Json?
  execution_time_seconds  Float?
  workflow_metrics        workflow_metrics?
  workflow_status_updates workflow_status_updates[]
  workflow_executions     workflow_executions[]

  @@index([framework], map: "idx_workflows_framework")
  @@index([model], map: "idx_workflows_model")
  @@index([status], map: "idx_workflows_status")
  @@index([workflow_type], map: "idx_workflows_type")
}

enum workflow_status {
  PENDING
  STARTING
  RUNNING
  COMPLETED
  FAILED
}

model github_star_records {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  repo_owner String
  repo_name  String
  stars_count Int
  record_date DateTime @db.Date
  created_at  DateTime @default(now()) @db.Timestamptz(6)

  @@index([repo_owner, repo_name], map: "idx_github_stars_repo")
  @@index([record_date], map: "idx_github_stars_date")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model workflow_executions {
  id                  String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  workflow_id         String   @db.Uuid
  ip_address          String?
  user_agent          String?
  referer             String?
  execution_time      DateTime @default(now()) @db.Timestamptz(6)
  geo_country         String?
  geo_region          String?
  geo_city            String?
  successful          Boolean  @default(true)
  error_message       String?
  workflows           workflows @relation(fields: [workflow_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([workflow_id], map: "idx_workflow_executions_workflow_id")
  @@index([execution_time], map: "idx_workflow_executions_time")
  @@index([ip_address], map: "idx_workflow_executions_ip")
}

model events {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String?  @db.Uuid  // Optional - for authenticated users
  session_id     String?  // For anonymous tracking
  event_type     String   // e.g., "title_generation", "link_click", "page_view", "signup", "signin"
  event_category String?  // e.g., "marketing", "product", "auth", "engagement"
  event_action   String?  // e.g., "generate", "click", "view", "submit"
  event_label    String?  // Additional context
  event_value    Float?   // Numeric value if applicable
  timestamp      DateTime @default(now()) @db.Timestamptz(6)
  
  @@index([user_id], map: "idx_events_user_id")
  @@index([session_id], map: "idx_events_session_id")
  @@index([event_type], map: "idx_events_type")
  @@index([event_category], map: "idx_events_category")
  @@index([timestamp], map: "idx_events_timestamp")
}
